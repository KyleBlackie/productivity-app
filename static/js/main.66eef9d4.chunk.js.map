{"version":3,"sources":["components/Header.js","components/AddActivity.js","components/ActivityItem.js","components/Activities.js","components/Reset.js","App.js","index.js"],"names":["headerStyle","backgroundColor","color","textAlign","padding","Header","style","AddActivity","state","title","hours","minutes","onSubmit","e","preventDefault","props","addActivity","setState","onChange","target","name","value","increaseHours","decreaseHours","increaseMinutes","decreaseMinutes","this","formStyle","type","placeholder","width","marginBottom","onClick","incrementButtonStyle","marginTop","Component","display","flexDirection","alignItems","margin","window","innerWidth","ActivityItem","activity","id","seconds","itemStyle","flex","justifyContent","toggleCountdown","bind","countdown","delActivity","delBtnStyle","background","borderBottom","border","marginLeft","cursor","Activities","activities","map","key","Reset","resetStyle","resetActivities","resetBtnStyle","borderTop","App","newActivity","uuid","v4","originalTime","filter","intervalID","setInterval","tick","clearInterval","activitiesCopy","JSON","parse","stringify","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.66eef9d4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header() {\r\n    return(\r\n      <header style={headerStyle}>\r\n          <h1>Productivity App</h1>\r\n      </header>  \r\n    );\r\n}\r\n\r\nconst headerStyle = {\r\n    backgroundColor: '#E63946',\r\n    color: '#F1FAEE',\r\n    textAlign: 'center',\r\n    padding: '5px'\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class AddActivity extends Component {\r\n    \r\n    state = {\r\n        title: '',\r\n        hours: 0,\r\n        minutes: 0\r\n    }\r\n\r\n    //create an activity when submitted\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        //pass state to new activity\r\n        this.props.addActivity(this.state.title, this.state.hours, this.state.minutes);\r\n        this.setState({\r\n            title: '',\r\n            hours: 0,\r\n            minutes: 0\r\n        });\r\n    }\r\n\r\n    onChange = (e) => this.setState({[e.target.name]: e.target.value});\r\n\r\n    //change values for duration of activity to be added\r\n    \r\n    increaseHours = (e) => {\r\n        e.preventDefault();\r\n        this.setState((state) => {\r\n            return{hours: state.hours + 1};\r\n        });\r\n    }\r\n\r\n    decreaseHours = (e) => {\r\n        e.preventDefault();\r\n        this.setState((state) => {\r\n            return state.hours === 0 ? {hours: 0} : {hours: state.hours - 1};\r\n        });\r\n    }\r\n\r\n    increaseMinutes = (e) => {\r\n        e.preventDefault();\r\n        this.setState((state) => {\r\n            return state.minutes === 55 ? {minutes: 0} : {minutes: state.minutes + 5};\r\n        });\r\n    }\r\n\r\n    decreaseMinutes = (e) => {\r\n        e.preventDefault();\r\n        this.setState((state) => {\r\n            return state.minutes === 0 ? {minutes: 0} : {minutes: state.minutes - 5};\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.onSubmit} style={formStyle}>\r\n                <input\r\n                    type='text'\r\n                    name='title'\r\n                    placeholder={width > 768 ? 'What do you need to work on today?':'Add Activity ...'}\r\n                    style={{padding: '10px', marginBottom: '10px', width: '40vw'}}\r\n                    value={this.state.title}\r\n                    onChange={this.onChange}\r\n                />\r\n                <div>\r\n                    <h3>Hours</h3>\r\n                    <button onClick={this.increaseHours} style={incrementButtonStyle}> + </button>\r\n                    <span> {this.state.hours} </span>\r\n                    <button onClick={this.decreaseHours} style={incrementButtonStyle}> - </button>\r\n                \r\n                    <h3>Minutes</h3>\r\n                    <button onClick={this.increaseMinutes} style={incrementButtonStyle}> + </button>\r\n                    <span> {this.state.minutes} </span>\r\n                    <button onClick={this.decreaseMinutes} style={incrementButtonStyle}> - </button>\r\n                </div>\r\n                <input\r\n                    type=\"submit\" \r\n                    value=\"Submit\"  \r\n                    style={{width: '25vw', padding: '5px', marginTop: '15px'}}              \r\n                />\r\n            </form>             \r\n            \r\n        )\r\n    }\r\n}\r\n\r\n// styling\r\n\r\nconst formStyle = {\r\n    display: 'flex', \r\n    flexDirection: 'column', \r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    padding: '15px',\r\n    backgroundColor: '#1D3557',\r\n    color: '#F1FAEE'\r\n}\r\n\r\nconst incrementButtonStyle = {\r\n    padding: '3px 5px',\r\n    margin: '2px 2px',\r\n    display: 'inline-block',\r\n    //border: 'none',\r\n}\r\n\r\n// variable for title placeholder value\r\nlet width = window.innerWidth\r\n\r\n// prop types\r\nAddActivity.propTypes = {\r\n    addActivity: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddActivity;\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class ActivityItem extends Component {\r\n\r\n    render() {\r\n\r\n        const {id, title, hours, minutes, seconds} = this.props.activity;\r\n\r\n        return (\r\n                <div style={itemStyle}>\r\n                    <div style={{flex:'3'}}>{ title }</div>\r\n                    <div style={{flex:'1', display: 'flex', justifyContent: 'space-around', alignItems: 'center'}}>\r\n                    <button onClick={this.props.toggleCountdown.bind(this, id)} style={{padding: \"4px\"}}> Start / Stop</button>{' '}\r\n                    {/* format the way time remaining is displayed */}\r\n                    <div style={{color: this.props.activity.countdown ? 'green' : 'black'}}>\r\n                        {hours}{':'}{minutes === 0 ? '00' : minutes < 10 ? '0' + minutes : minutes }{':'}\r\n                        {seconds === 0 ? '00' : seconds < 10 ? '0' + seconds : seconds }\r\n                    </div>\r\n                    <button onClick={this.props.delActivity.bind(this, id)}style={delBtnStyle}>x</button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst itemStyle = {\r\n    display: \"flex\",\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    background: \"#A8DADC\",\r\n    padding: \"10px\",\r\n    borderBottom: \"1px #bbb solid\",\r\n    width: \"100vw\",\r\n    color: \"black\"\r\n}\r\n\r\n// delete button style\r\nconst delBtnStyle = {\r\n    background: '#f00',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 10px',\r\n    //borderRadius: '100%',\r\n    marginLeft: '5px',\r\n    cursor: 'pointer',\r\n}\r\n\r\n// prop types\r\nActivityItem.propTypes = {\r\n    activity: PropTypes.object.isRequired,\r\n    delActivity: PropTypes.func.isRequired,\r\n    toggleCountdown: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n\r\n\r\nexport default ActivityItem\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ActivityItem from './ActivityItem';\r\n\r\nexport class Activities extends Component {\r\n    render() {\r\n        return this.props.activities.map((activity) => (\r\n            <ActivityItem key={activity.id} activity={activity} \r\n            delActivity={this.props.delActivity} toggleCountdown={this.props.toggleCountdown} />\r\n        ));\r\n            \r\n    }\r\n}\r\n\r\nActivities.propTypes = {\r\n    activities: PropTypes.array.isRequired,\r\n    delActivity: PropTypes.func.isRequired,\r\n    toggleCountdown: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default Activities\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Reset extends Component {\r\n    render() {\r\n        return (\r\n            <div style={resetStyle}>\r\n                <button onClick={this.props.resetActivities} style={resetBtnStyle}> Reset Timers</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// styling\r\n\r\nconst resetStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '15px',\r\n    backgroundColor: '#788',\r\n    borderTop: '2px #000 solid',\r\n    borderBottom: '1px #000 dashed'\r\n}\r\n\r\nconst resetBtnStyle = {\r\n    padding: '5px 10px',\r\n    border: 'none',\r\n    //cursor: 'pointer'\r\n}\r\n\r\n// prop types\r\nReset.propTypes = {\r\n    resetActivities: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Reset\r\n","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport AddActivity from './components/AddActivity';\nimport Activities from './components/Activities';\nimport Reset from './components/Reset';\nimport './App.css';\nimport uuid from 'uuid';\n\n\nclass App extends Component {\n\n  state = {\n    activities: []\n  }\n  \n  // countdown start / stop functions\n  componentDidMount() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      1000\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick(){\n    // create copy of activities and update new times for all activities with setState\n    let activitiesCopy = JSON.parse(JSON.stringify(this.state.activities));\n\n    this.setState({\n      activities: activitiesCopy.map(activity => {\n        // grab variables needed from the activity\n        let { hours, minutes, seconds, countdown} = activity;\n        if(countdown){\n          if(seconds === 0){\n            if(minutes === 0){\n              if(hours === 0){\n                // timer complete\n                activity.countdown = false;\n              }else {\n                activity.hours--;\n                activity.minutes = 59;\n                activity.seconds = 59;\n              }\n            }else{\n              activity.minutes--;\n              activity.seconds = 59;\n            }\n          }else {\n            activity.seconds--;\n          }\n        }\n        return activity;\n      })\n    });\n  }\n\n  // change countdown status\n  toggleCountdown = (id) => {\n    this.setState({\n      activities: this.state.activities.map(activity => {\n        if(activity.id === id){\n          activity.countdown = !activity.countdown;\n        }\n        return activity;\n      })\n    });\n  }\n  //--------------------------------\n\n  // add new activity item\n  addActivity = (title, hours, minutes) => {\n    const newActivity = {\n      id: uuid.v4(),\n      title,\n      hours,\n      minutes,\n      seconds: 0,\n      originalTime: {hours: hours, minutes: minutes}\n    }\n    this.setState({\n      activities: [...this.state.activities, newActivity]\n    });\n  }\n\n  // delete activity item\n  delActivity = (id) => {\n    this.setState({\n      activities: [...this.state.activities.filter(activity => activity.id !== id)]\n    });\n  }\n\n  // reset activities timers\n  resetActivities = () => {\n    this.setState({\n      activities: this.state.activities.map(activity => {\n        activity.hours = activity.originalTime.hours;\n        activity.minutes = activity.originalTime.minutes;\n        activity.seconds = 0;\n        activity.countdown = false;\n        return activity;\n      })\n    });\n  }\n\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header />\n        <AddActivity addActivity={this.addActivity}/>\n        <Reset resetActivities={this.resetActivities}/>\n        <Activities activities={this.state.activities}\n        delActivity={this.delActivity} toggleCountdown={this.toggleCountdown}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}